{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/js/boardGame.js","webpack:///./assets/js/chess.js","webpack:///./assets/js/game.js","webpack:///./assets/js/kingCase.js","webpack:///./assets/js/main.js","webpack:///./assets/js/table.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACM;AACR;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,c;AACA;;AAEA;AACO;AACP,aAAa,0CAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAK;AACzC;AACA;AACA;AACA,oCAAoC,4CAAK;AACzC;AACA;AACA;AACA,oCAAoC,4CAAK;AACzC;AACA;AACA;AACA,uCAAuC,kDAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,C;;;;;;;;;;;;AC9GA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACdA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE,GAAG,EAAE;AAC3B;;AAEA;AACA,sBAAsB,EAAE,GAAG,EAAE;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACvBA;AAAA;AAAO;AACP;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAkC;AACI;;AAEtC;;AAEA,IAAI,sDAAW;AACf,IAAI,6DAAU;AACd,CAAC,I;;;;;;;;;;;;ACPD;AAAA;AAAsC;;AAEtC;AACe;AACf;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC,EAAE,GAAG,EAAE;AAC5C;AACA,YAAY,4DAAS;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./assets/js/main.js\");\n","import {Chess} from \"./chess\";\nimport {KingCase} from \"./kingCase\";\nimport {Game} from \"./game\";\n\nconst board9X9 = [\n    [4, 0, 0, 1, 1, 1, 0, 0, 4],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0],\n    [0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [1, 0, 0, 0, 2, 0, 0, 0, 1],\n    [1, 1, 2, 2, 3, 2, 2, 1, 1],\n    [1, 0, 0, 0, 2, 0, 0, 0, 1],\n    [0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0],\n    [4, 0, 0, 1, 1, 1, 0, 0, 4]\n  ];\n\nconst black = \"assets/img/black_piece.svg\";\nconst white = \"assets/img/white_piece.svg\";\nconst white_king = \"assets/img/white_king.svg\";\nconst kingCase = \"assets/img/win_condition.svg\";\n\nlet game;\nlet currentPiece = {};\n\nexport const selection = (coordinate) => {\n  const cell = game.getPiecesByCoordinate(coordinate);\n\n  //select one piece of the board\n  if (cell != undefined){\n    // if (isEmpty(currentPiece)) {\n    currentPiece = cell.copy_chess();\n    currentPiece.coordinate = coordinate;\n    // }\n  }\n  else if (!isEmpty(currentPiece)){\n    if (game.inKingCase(coordinate)){\n      \n      \n    }\n    else{\n      console.log('move');\n      move(coordinate);\n    }\n  }\n  console.log('currentPiece', currentPiece);\n  // switch (number) {\n  //   case 0:\n  //     move(number, x, y);\n  //     break;\n  //   case 4:\n  //     if (selectedPiece.color == 3) {\n  //       move(number, x, y);\n  //       if (x != 4 && y != 4) {\n  //         checkWin(x, y);\n  //       }\n  //     }\n  //     break;\n  // }\n\n  // killKing();\n};\n\nconst move = (coordinate) => {\n  if (checkMove(coordinate)){\n    console.log('must check cell on the way');\n  }\n};\n\nconst checkMove = (coordinate) => {\n  const piece_coord = currentPiece.coordinate.split(' ');\n  const move = coordinate.split(' ');\n  return (piece_coord[0] == move[0] || piece_coord[1] == coord[1]) && game.getInGame();\n}\n\nconst isEmpty = (currentPiece) => {\n  for(let item in currentPiece) return false;\n  return true; \n};\n\n//Parcourir tableau\nexport const printTable = () => {\n  game = new Game();\n  board9X9.forEach((row, i) => {\n      row.forEach((cell, j) => {\n        let img = document.createElement(\"img\");\n        switch (cell) {\n          case 1:\n            img.setAttribute(\"src\", black);\n            game.addPiece(i, j, new Chess(\"black\", black, false));\n            break;\n          case 2:\n            img.setAttribute(\"src\", white);\n            game.addPiece(i, j, new Chess(\"white\", white, false));\n            break;\n          case 3:\n            img.setAttribute(\"src\", white_king);\n            game.addPiece(i, j, new Chess(\"white\", white_king, true));\n            break;\n          case 4:\n            img.setAttribute(\"src\", kingCase);\n            game.addKingCase(i, j, new KingCase(kingCase));\n            break;\n        }\n        document\n          .getElementById(\"board\")\n          .querySelectorAll(\"tr\")\n          [i].querySelectorAll(\"td\")\n          [j].appendChild(img);\n      });\n    });\n}","export class Chess{\n    constructor(color, img, king){\n        this._color = color;\n        this._img = img;\n        this._king = king;\n    }\n\n    copy_chess(){\n        let data = {}\n        data._color = this._color;\n        data._img = this._img;\n        data._king = this._king;\n        return data;\n    }\n}","export class Game{\n  constructor(){\n    this._pieces = {};\n    this._kingCase = {};\n    this._inGame = true;\n  }\n  addPiece(x, y, chess){\n    this._pieces[`${x} ${y}`] = chess;\n  }\n\n  addKingCase(x, y, kCase){\n    this._kingCase[`${x} ${y}`] = kCase;\n  }\n\n  getPiecesByCoordinate(coord) {\n    return this._pieces[coord];\n  }\n  inKingCase(coordinate){\n    return this._kingCase[coordinate] != undefined \n  }\n  getInGame(){\n    return this._inGame;\n  }\n}","export class KingCase{\n    constructor(img){\n        this._img = img;\n    }\n}","import createTable from \"./table\";\nimport {printTable} from \"./boardGame\"\n\n(() => {\n\n    createTable();\n    printTable();\n})();","import {selection} from \"./boardGame\";\n\n//Creat table inside board id\nexport default () => {\n    let board = document.getElementById(\"board\");\n    let table = document.createElement(\"table\");\n\n    for (let i = 0; i < 9; i++) {\n    let row = document.createElement(\"tr\");\n    for (let j = 0; j < 9; j++) {\n        let column = document.createElement(\"td\");\n        row.appendChild(column);\n        if ((i + j) % 2 == 0) {\n        column.setAttribute(\"class\", \"bg_board1\");\n        } else {\n        column.setAttribute(\"class\", \"bg_board2\");\n        }\n        column.setAttribute(\"id\", `${i} ${j}`);\n        column.addEventListener(\"click\", () => {\n            selection(column.id);\n        });\n    }\n    table.appendChild(row);\n    }\n    board.appendChild(table);\n}"],"sourceRoot":""}